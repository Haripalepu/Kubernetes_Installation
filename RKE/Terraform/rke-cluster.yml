1. Create a load aws network load balancer and TG.
2. Create 3 machines and give the following in the userdata.
#!/bin/bash
sudo curl https://get.docker.com | bash
sudo usermod -a -G docker ubuntu
sudo usermod -a -G root ubuntu
sudo systemctl daemon-reload
sudo systemctl restart docker
sudo reboot
3. Replace the loadbalancer and dns name under authentication below.
4. Replace all the Public IPs with the servers you have created.
5. Create additional 3 more nodes to add them as workers.
6. Make sure you also add additional domain names if needed under authentication
7. Adding additonal nodes and peforming rke.exe up --update-only , will not impact any apps.

time="2023-03-04T10:53:41+05:30" level=fatal msg="Unsupported Docker version found [23.0.1] on host [44.212.75.32], supported versions are [1.13.x 17.03.x 17.06.x 17.09.x 18.06.x 18.09.x 19.03.x 20.10.x]"

PS C:\SUREDELETELATER\K8SB19\RKE\RKE-CLUSTER> rke up --ignore-docker-version
rke.exe up --update-only --ignore-docker-version
rke remove  --ignore-docker-version

ssh_key_path: C:\SUREDELETELATER\K8SB13\RKE\LaptopKey.pem
cluster_name: k8sb13cluster
kubernetes_version: v1.22.10-rancher1-1
nodes:
  - address: 3.86.167.219
    hostname_override: master01
    #internal_address: 172.16.22.12
    user: ubuntu
    role: [controlplane, worker, etcd]
  - address: 44.202.69.141
    hostname_override: master02
    #internal_address: 172.16.32.37
    user: ubuntu
    role: [controlplane, worker, etcd]
  - address: 54.235.238.241
    hostname_override: master03
    #internal_address: 172.16.42.73
    user: ubuntu
    role: [controlplane, worker, etcd]
  - address: 3.82.165.76
    hostname_override: worker01
    #internal_address: 172.16.42.73
    user: ubuntu
    role: [worker]
  - address: 3.95.169.163
    hostname_override: worker02
    #internal_address: 172.16.42.73
    user: ubuntu
    role: [worker]
  - address: 44.206.244.0
    hostname_override: worker03
    #internal_address: 172.16.42.73
    user: ubuntu
    role: [worker]

authentication:
    strategy: x509
    sans:
      - "rke-nlb-a466af11188e4157.elb.us-east-1.amazonaws.com"
      - "rke.k8sb13.xyz"
      - "kgf.k8sb13.xyz"
services:
  etcd:
    snapshot: true
    creation: 6h
    retention: 24h

# Required for external TLS termination with
# ingress-nginx v0.22+
ingress:
  provider: nginx
  options:
    use-forwarded-headers: "true"

network:
  plugin: flannel
  options:
    flannel_iface: eth0
    flannel_backend_type: vxlan
    flannel_autoscaler_priority_class_name: system-cluster-critical # Available as of RKE v1.2.6+
    flannel_priority_class_name: system-cluster-critical # Available as of RKE v1.2.6+
    
    
    
    
    
    
    